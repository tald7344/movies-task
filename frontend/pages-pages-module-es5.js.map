{"version":3,"sources":["webpack:///src/app/@theme/admin-service/guard/after-login.service.ts","webpack:///src/app/@theme/components/index.ts","webpack:///src/app/@theme/store/shared/shared.selector.ts","webpack:///src/app/pages/pages-routing.module.ts","webpack:///src/app/pages/pages.component.ts","webpack:///src/app/pages/pages.module.ts"],"names":["AfterLoginService","tokenService","router","next","state","flag","loggedIn","navigate","providedIn","sharedFeatureState","getLoadSpinner","showLoading","routes","path","component","children","loadChildren","then","m","MoviesModule","canActivate","PagesRoutingModule","forChild","imports","exports","PagesComponent","document","render","store","menu","showLoadingIndicator$","select","selector","template","Document","PagesModule","declarations"],"mappings":"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","file":"pages-pages-module-es5.js","sourcesContent":["import { Route } from '@angular/compiler/src/core';\r\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { TokenService } from '../token/token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AfterLoginService implements CanActivate {\r\n\r\n  constructor(private tokenService: TokenService,\r\n              private router: Router) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      // return true;\r\n      const flag = this.tokenService.loggedIn();\r\n      if (flag){\r\n        return flag ;\r\n      } else {\r\n        this.router.navigate(['/auth/login']);\r\n        return;\r\n      }\r\n      return flag;\r\n  }\r\n}\r\n","export * from './sidebar/sidebar.component';\r\nexport * from './footer/footer.component';\r\nexport * from './not-found/not-found.component';","import { createFeatureSelector, createSelector } from \"@ngrx/store\";\r\nimport { SHARED_STATE_KEY } from \"./shared.reducer\";\r\nimport { SharedState } from \"./shared.state\";\r\n\r\nconst sharedFeatureState = createFeatureSelector<SharedState>(SHARED_STATE_KEY);\r\n\r\nexport const getLoadSpinner = createSelector(sharedFeatureState, state => state.showLoading);","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AfterLoginService } from '../@theme/admin-service/guard/after-login.service';\nimport { NotFoundComponent } from '../@theme/components';\nimport { PagesComponent } from './pages.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PagesComponent,\n    children: [\n      {\n        path: '',\n        loadChildren: () => import('./list-movies/movies.module').then(m => m.MoviesModule),\n        canActivate: [AfterLoginService]\n      },\n      { path: '**', component: NotFoundComponent }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PagesRoutingModule { }\n","import { DOCUMENT } from '@angular/common';\nimport { Component, HostListener, Inject, OnInit, Renderer2 } from '@angular/core';\nimport { Event, NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { AppState } from '../@theme/store/app-state';\nimport { getLoadSpinner } from '../@theme/store/shared/shared.selector';\nimport { SIDEBAR_MENU_ITEM } from '../sidebar-menu';\n\n@Component({\n  selector: 'app-pages',\n  template: `\n  \n  <div id=\"parent_body_div\" class=\"row w-100\">\n    <div id=\"sidebar_div\" class=\"col-4 col-xl-3 px-0 d-none d-md-block\">\n      <app-sidebar [menus]=\"menu\"></app-sidebar>\n    </div>\n    <div id=\"body_div\" class=\"col-8 col-xl-9 pr-0\">\n      <app-loading-spinner *ngIf=\"showLoadingIndicator$ | async\"></app-loading-spinner>\n      <router-outlet *ngIf=\"!(showLoadingIndicator$ | async)\"></router-outlet>\n    </div>\n  </div>`\n})\nexport class PagesComponent implements OnInit {\n  menu = SIDEBAR_MENU_ITEM;\n  \n  // showLoadingIndicator = true;\t\t// create variable\n  showLoadingIndicator$: Observable<boolean>;\n\n  constructor(@Inject(DOCUMENT) private document: Document,\n              private render: Renderer2,\n              private store: Store<AppState>) {    \n  }\n\n  ngOnInit(): void {\n    this.showLoadingIndicator$ = this.store.select(getLoadSpinner);\n  }\n\n  \n}\n","import { NgModule } from '@angular/core';\nimport { ThemeModule } from '../@theme/theme.module';\nimport { PagesRoutingModule } from './pages-routing.module';\n\nimport { PagesComponent } from './pages.component';\n\n\n@NgModule({\n  declarations: [PagesComponent],\n  imports: [\n    PagesRoutingModule,\n    ThemeModule\n  ]\n})\nexport class PagesModule { }\n"]}